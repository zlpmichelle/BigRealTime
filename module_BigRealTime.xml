<?xml version="1.0" encoding="UTF-8"?>
<project name="module_pcatest" default="compile.module.pcatest">
  <dirname property="module.pcatest.basedir" file="/module_BigRealTime.xml"/>
  
  <property name="module.jdk.home.pcatest" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.pcatest" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.pcatest" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.pcatest" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="pcatest.output.dir" value="${module.pcatest.basedir}/out/production/pcatest"/>
  <property name="pcatest.testoutput.dir" value="${module.pcatest.basedir}/out/test/pcatest"/>
  
  <path id="pcatest.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="pcatest.module.production.classpath">
    <path refid="${module.jdk.classpath.pcatest}"/>
    <path refid="library.spark-assembly-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.spark-examples-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.mahout-core-0.9-job.classpath"/>
    <path refid="library.mahout-core-0.9.classpath"/>
    <path refid="library.mahout-examples-0.9-job.classpath"/>
    <path refid="library.mahout-examples-0.9.classpath"/>
    <path refid="library.mahout-integration-0.9.classpath"/>
    <path refid="library.mahout-math-0.9.classpath"/>
    <path refid="library.apache-log4j-extras-1.2.17.classpath"/>
    <path refid="library.hadoop-mapreduce-client-core-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.hadoop-common-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.scala-sdk-2.11.6.classpath"/>
    <path refid="library.pca.classpath"/>
  </path>
  
  <path id="pcatest.runtime.production.module.classpath">
    <pathelement location="${pcatest.output.dir}"/>
    <path refid="library.spark-assembly-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.spark-examples-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.mahout-core-0.9-job.classpath"/>
    <path refid="library.mahout-core-0.9.classpath"/>
    <path refid="library.mahout-examples-0.9-job.classpath"/>
    <path refid="library.mahout-examples-0.9.classpath"/>
    <path refid="library.mahout-integration-0.9.classpath"/>
    <path refid="library.mahout-math-0.9.classpath"/>
    <path refid="library.apache-log4j-extras-1.2.17.classpath"/>
    <path refid="library.hadoop-mapreduce-client-core-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.hadoop-common-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.scala-sdk-2.11.6.classpath"/>
    <path refid="library.pca.classpath"/>
  </path>
  
  <path id="pcatest.module.classpath">
    <path refid="${module.jdk.classpath.pcatest}"/>
    <pathelement location="${pcatest.output.dir}"/>
    <path refid="library.spark-assembly-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.spark-examples-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.mahout-core-0.9-job.classpath"/>
    <path refid="library.mahout-core-0.9.classpath"/>
    <path refid="library.mahout-examples-0.9-job.classpath"/>
    <path refid="library.mahout-examples-0.9.classpath"/>
    <path refid="library.mahout-integration-0.9.classpath"/>
    <path refid="library.mahout-math-0.9.classpath"/>
    <path refid="library.apache-log4j-extras-1.2.17.classpath"/>
    <path refid="library.hadoop-mapreduce-client-core-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.hadoop-common-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.scala-sdk-2.11.6.classpath"/>
    <path refid="library.pca.classpath"/>
  </path>
  
  <path id="pcatest.runtime.module.classpath">
    <pathelement location="${pcatest.testoutput.dir}"/>
    <pathelement location="${pcatest.output.dir}"/>
    <path refid="library.spark-assembly-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.spark-examples-1.3.0-cdh5.4.2-hadoop2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.mahout-core-0.9-job.classpath"/>
    <path refid="library.mahout-core-0.9.classpath"/>
    <path refid="library.mahout-examples-0.9-job.classpath"/>
    <path refid="library.mahout-examples-0.9.classpath"/>
    <path refid="library.mahout-integration-0.9.classpath"/>
    <path refid="library.mahout-math-0.9.classpath"/>
    <path refid="library.apache-log4j-extras-1.2.17.classpath"/>
    <path refid="library.hadoop-mapreduce-client-core-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.hadoop-common-2.6.0-cdh5.4.2.classpath"/>
    <path refid="library.scala-sdk-2.11.6.classpath"/>
    <path refid="library.pca.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.pcatest">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.pcatest">
    <patternset refid="excluded.from.module.pcatest"/>
  </patternset>
  
  <path id="pcatest.module.sourcepath">
    <dirset dir="${module.pcatest.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.pcatest" depends="compile.module.pcatest.production,compile.module.pcatest.tests" description="Compile module pcatest"/>
  
  <target name="compile.module.pcatest.production" depends="register.custom.compilers" description="Compile module pcatest; production classes">
    <mkdir dir="${pcatest.output.dir}"/>
    <javac2 destdir="${pcatest.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.pcatest}/javac">
      <compilerarg line="${compiler.args.pcatest}"/>
      <bootclasspath refid="pcatest.module.bootclasspath"/>
      <classpath refid="pcatest.module.production.classpath"/>
      <src refid="pcatest.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.pcatest"/>
    </javac2>
    
    <copy todir="${pcatest.output.dir}">
      <fileset dir="${module.pcatest.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.pcatest.tests" depends="register.custom.compilers,compile.module.pcatest.production" description="compile module pcatest; test classes" unless="skip.tests"/>
  
  <target name="clean.module.pcatest" description="cleanup module">
    <delete dir="${pcatest.output.dir}"/>
    <delete dir="${pcatest.testoutput.dir}"/>
  </target>
</project>